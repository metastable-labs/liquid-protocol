name: Smart Contract Deployment

on:
  push:
    branches: [ "main", "curator" ]
  pull_request:
    branches: [ "main", "curator" ]

env:
  FOUNDRY_PROFILE: ci
jobs:
  check:
    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Dependencies
        run: forge install

      - name: Run tests
        run: |
          forge build --sizes
          forge test -vvv
        id: test

      - name: Run snapshot
        run: |
          forge snapshot
        id: snapshot

  deploy-mainnet-beta:
    needs: check
    if: github.ref == 'refs/heads/curator'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Set up environment
        run: |
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env
          echo "BASE_RPC_URL=${{ secrets.BASE_RPC_URL }}" >> .env
          echo "BASESCAN_API_KEY=${{ secrets.BASESCAN_API_KEY }}" >> .env

      - name: Make deploy script executable
        run: chmod +x ./scripts/deploy.sh

      - name: Deploy to Mainnet Beta
        run: |
          echo -e "\n" | ./scripts/deploy.sh
        env:
          CI: true

  deploy-mainnet:
    needs: check
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
          cache: false

      - name: Set up environment
        run: |
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env
          echo "BASE_RPC_URL=${{ secrets.BASE_RPC_URL }}" >> .env
          echo "BASESCAN_API_KEY=${{ secrets.BASESCAN_API_KEY }}" >> .env

      - name: Make deploy script executable
        run: chmod +x ./scripts/deploy.sh

      - name: Deploy to Mainnet
        run: |
          echo -e "\n" | ./scripts/deploy.sh
        env:
          CI: true

      - name: Save Deployment Artifacts
        if: success()
        run: |
          mkdir -p deployments
          cp broadcast/contracts.s.sol/*.json deployments/

      - name: Upload Deployment Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-artifacts
          path: deployments/

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          files: deployments/*.json
          name: Release ${{ github.sha }}
          body: |
            Base Mainnet Deployment
            Commit: ${{ github.sha }}
            
            Deployment artifacts are attached to this release.
          draft: false
          prerelease: false